plot(sdf3)
plot(sdf3,captaincy$victory)
for(i in 1:length)
{
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
}
length = nrow(captaincy)
for(i in 1:length){
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
}
length = nrow(captaincy)
for(i in 1:length){
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
}
length = nrow(captaincy)
for(i in 1:length)
{
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
}
for (i in 1:length)
{
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
}
length = nrow(captaincy)
for (i in 1:length)
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
for (i in 1:length)
{
print(i)
if(captaincy$victory[i]=>0.30){
print(captaincy$names[i])
}
}
for (i in 1:length)
{
print(i)
if(captaincy$victory[i]>0.30){
print(captaincy$names[i])
}
}
length = nrow(captaincy)
for (i in 1:length)
{
if(captaincy$victory[i]>0.30){
print(captaincy$names[i])
}
}
sdf3 <- subset(captaincy,victory>0.30,select = c(names,victory))
View(sdf3)
View(captaincy)
head(df)
tail(df)
is.na(captaincy$played)
is.na(captaincy$Y)
sum(is.na(captaincy$names))
is.na.data.frame(captaincy)
is.na(captaincy)
sum(is.na(captaincy))
sum(is.na.data.frame(captaincy))
x <- c(1,2,NA,3)
is.na(x)
sum(is.na(x))
sum(is.na(x))/length(x)
mean(x)
which(is.na(x))
mean(x,na.rm=TRUE)
## Mergining ####
captaincy2 <- read.csv("data/CaptaincyData2.csv")
view(captaincy2)
view(captaincy2)
View(captaincy2)
captaincy <- merge(captaincy,captaincy2,by="names")
View(captaincy)
## Importig from diff format ####
# install.packages("XML")
# add library(XML) on top of the script file
df3 <- xmlToDataFrame("data/CaptaincyData.xml")
library(XML)
## Importig from diff format ####
# install.packages("XML")
# add library(XML) on top of the script file
df3 <- xmlToDataFrame("data/CaptaincyData.xml")
view(df3)
View(df3)
# Load data with Txt File
txtdf <- read.table("data/CaptaincyData.txt")
view(txtdf)
# Load data with Txt File
txtdf <- read.table("data/CaptaincyData.txt")
View(txtdf)
df <- read_excel("data/StateData.xlsx")
df <- read_excel("data/StateData.xlsx")
library(readxl)
df <- read_excel("data/StateData.xlsx")
df
View(df)
subDF <- subset(df, governor > "Republican",select=c("state_code","State"))
View(subDF)
subDF <- subset(df, governor = "Republican",select=c("state_code","State"))
View(subDF)
subDF <- subset(df, governor = "Republican",select=c("state_code","State","Republican"))
View(subDF)
subDF <- subset(df, governor = "Republican",select=c("state_code","State","governor"))
View(subDF)
subDF <- subset(df, governor == "Republican",select=c("state_code","State","governor"))
View(subDF)
subDF1 <- subset(df, governor == "Democrat" && openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State"))
View(subDF1)
subDF1 <- subset(df, openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State"))
View(subDF1)
subDF1 <- subset(df, openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State","openness","instagram","facebook"))
View(subDF1)
subDF1 <- subset(df, openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "	Democrat" && openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
subDF1 <- subset(df,governor == "Democrat" && openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor = "Democrat" && openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,openness > 40 && instagram > 0.60 && facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" && openness => 40 && instagram => 0.60 && facebook => 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" | openness => 40 | instagram => 0.40 | facebook => 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" | openness > 40 | instagram > 0.40 | facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
length(subDF1)
nrow(subDF1)
df <- read_excel("data/StateData.xlsx")
View(df)
nrow(subDF)
nrow(df)
subDF1 <- subset(df,governor == "Democrat" | openness > 40 | instagram > 0.40 | facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF <- subset(df, governor == "Republican",select=c("state_code","State","governor"))
View(subDF)
subDF1 <- subset(df,governor == "Democrat",select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" | openness > 40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" | openness > 40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" & openness > 40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" & openness > 40 & instagram > 0.40 & facebook > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" & openness > 40 & instagram > 0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Republican" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF2 <- subset(df,instagram > facebook, select = c("state_code","State"))
View(subDF2)
library(readxl)
df <- read_excel("data/StateData.xlsx")
View(df)
subDF1 <- subset(df,governor == "	Democrat" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
subDF1 <- subset(df,governor == "Democrat" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Democrat" & openness > 40 & instagram > 0.40 ,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
& facebook >0.40
& facebook >0.40
subDF1 <- subset(df,governor == "Democrat" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
subDF1 <- subset(df,governor == "Republican" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
getwd()
captaincy <- read.csv("data/CaptaincyData.csv")
View(captaincy)
# Importing Dataset ####
library(readxl)
library(XML)
df <- read_excel("data/CaptaincyData.xlsx")
View(df)
nrow(df)
ncol(df)
dim(df)
length(df)
## Slicing & Indexing ####
df[3,]
df[3]
df[c(2,3,4),]
df[c("names","won")]
plot(df[c("Y","played")])
df[[4]][3]
df[1:3,1]
df[df$year=="Mahi"]
##creating SubDataFrame ####
df <- read_excel("data/StateData.xlsx")
head(df)
tail(df)
View(df)
subDF <- subset(df, region = "Northeast",select=c("state_code","State"))
View(subDF)
nrow(subDF)
length(subDF)
unique(subDF$state_code)
length(unique(subDF$state_code))
length(unique(df$region))
## Genrate dataFrame using Vector ####
# Matrix Opertaion ####
df2 <- matrix(c("1","0","0","0","1","0","0","0","1"),nrow=3,byrow=1)
df2 <- diag(3)
df2
# converting to matrics
captaincy <- read.csv("data/CaptaincyData.csv")
View(captaincy)
SDF <- captaincy[1:3,c("played","lost","won")]
View(SDF)
matrixs <- as.matrix(SDF)
matrixs
class(SDF)
class(matrixs)
## Task 1 ####
# Create 3*3 matrix matrixB Using as.matrix
matrixB <- as.matrix(captaincy[2:4,c("played","lost","won")])
View(matrixB)
print(matrixs - matrixB)
print(matrixs * matrixB)
det(matrixs)
t(matrixs)
matrixB%*%matrixs
summary(captaincy)
names(captaincy)
class(captaincy)
typeof(captaincy)
sdf3 <- subset(captaincy,victory>0.30,select = c(names,victory))
View(sdf3)
length = nrow(captaincy)
for (i in 1:length)
{
if(captaincy$victory[i]>0.30){
print(captaincy$names[i])
}
}
is.na.data.frame(captaincy)
sum(is.na(captaincy$names))
sum(is.na.data.frame(captaincy))
x <- c(1,2,NA,3)
sum(is.na(x))/length(x)
mean(x)
mean(x,na.rm=TRUE)
which(is.na(x))
## Merging ####
captaincy2 <- read.csv("data/CaptaincyData2.csv")
View(captaincy2)
captaincy <- merge(captaincy,captaincy2,by="names")
View(captaincy)
write.csv(captaincy,"data/captaincy_merge.csv")
## Importig from diff format ####
# install.packages("XML")
# add library(XML) on top of the script file
df3 <- xmlToDataFrame("data/CaptaincyData.xml")
View(df3)
# Load data with Txt File
txtdf <- read.table("data/CaptaincyData.txt")
View(txtdf)
captaincy <- read.csv("data/captaincy_merge.csv")
View(captaincy)
str(captaincy)
print(captaincy$names)
names(captaincy)
print(captaincy$Y)
names(captaincy)
print(captaincy$Y)
print(captaincy$names)
names(captaincy)
str(captaincy)
captaincy$names <- as.character(captaincy$names)
str(captaincy)
#int to factor
captaincy$formats <-  as.factor(captaincy$formats)
str(captaincy)
levels(capaincy$formats)
levels(captaincy$formats)
levels(captaincy$formats) <- c("one","Two","Three")
str(captaincy)
#int to factor
captaincy$formats <-factor(captaincy$formats)
str(captaincy)
levels(captaincy$formats)
levels(captaincy$formats) <- c("one","Two","Three")
str(captaincy)
levels(captaincy$formats) <- c("one-day","T-twenty","Test")
View(captaincy)
captaincy$formats <- as.integer(captaincy$formats)
View(captaincy)
x <- c(1,2,3)
y <- c(5,6,7)
df = data.frame(x,y)
df
df$new_c <- c(1,2,3)
df
levels(df$new_c)
levels(df$new_c) <- c("one","Two","Three")
df
levels(df$new_c)
View(df)
df$new_c <- factor(df$new_c)
levels(df$new_c) <- c("one","Two","Three")
df
levels(df$new_c)
View(df)
str(df)
df$new_c2 <-  c(5,6,7)
df$new_c2 <- factor(df$new_c2)
df$new_c2 <-  df$y
df
df$new_c2 <- factor(df$new_c2)
levels(df$new_c2)
levels(df$new_c2) <- c("five","six","seven")
df
str(df)
levels(df$new_c3) <- factor(df$y) <- c("five","six","seven")
df$new_c3 <- factor(df$y) <- levels(df$new_c2) <- c("five","six","seven")
df$new_c3 <- levels(factor(df$y)) <- c("five","six","seven")
df$new_c3 <- factor(df$y).levels(df$new_c3) <- c("five","six","seven")
df$new_c3 <- levels(factor(df$y)) = c("five","six","seven")
df$new_c3 <- (levels(factor(df$y)) <-  c("five","six","seven"))
df$new_c3 <- (levels(factor(df$y)), c("five","six","seven"))
df$new_c3 <- (levels(factor(df$y)) <-  c("five","six","seven"))
df$new_c3 <- levels(factor(df$y)) <-  c("five","six","seven")
# List And operations
# list is mix Data Type
View(captaincy)
matriXB <- as.matrix(captaincy[2:4,c("played","lost","won")])
matriXB
v <- c(1,2,3)
L <- list(captaincy,matriXB,v)
L
L[1]
L[[3]][3]
names(L) <- c("df","mat","vec")
L
L
L$df
L$df[3]
L[[3]][3]
L$df[3,]
L2 <- c("Hii","OK","bye")
merge.list <- c(L,L2)
merge.list
L[[6]]
L[[6]][1]
L$bye
L[6]
L[[6]]
L[[5]]
L[[5]][1]
merge.list[[6]]
names(merge.list) <-  c("df","mat","vec","Hii","OK","bye")
merge.list$bye
# Declare a Varible to rad  and store the data frame
MovieDF <- read.csv("data/moviesData.csv")
View(MovieDF)
dim(MovieDF)
summary(MovieDF)
is.na(MovieDF)
sum(is.na(MovieDF))
str(MovieDF)
sum(is.na(MovieDF))
# plot  Histogram ####
hist(MovieDF$runtime)
hist(MovieDF$runtime,
main="Movie's Length distribution",
xlab="Runtime",
xlim=c(0,300),
col="red")
hist(MovieDF$runtime,
main="Movie's Length distribution",
xlab="Runtime",
xlim=c(0,300),
col="red"
,breaks = 3)
hist(MovieDF$runtime,
main="Movie's Length distribution",
xlab="Runtime",
xlim=c(0,300),
col="red"
,breaks = 1)
hist(MovieDF$runtime,
main="Movie's Length distribution",
xlab="Runtime",
xlim=c(0,300),
col="red"
,breaks = 10)
hist(MovieDF$runtime,
main="Movie's Length distribution",
xlab="Runtime",
xlim=c(0,300),
col="red"
,breaks = 9)
# Ploting pie chart ####
unique(MovieDF$genre)
# create frequency Table ####
genertable <- table(MovieDF$genre)
View(genertable)
pie(genertable)
pie(genertable, main="Pie chart of genre",border = "red",col="green")
pie(genertable, main="Pie chart of genre",border = "red",col="green,red")
pie(genertable, main="Pie chart of genre",border = "red",col=c("green"))
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red"))
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red","yellow"))
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red","yellow","blue"))
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red","yellow","blue","cyan"))
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red","yellow","blue","cyan","orange"))
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red","yellow","blue","cyan","orange","black"))
# barplot ####
barplot(MovieDF$imdb_rating)
barplot(MovieDF$imdb_rating,col="red",ylab="rating",xlab = "movies",
ylim = c(0,10),main = "IMDB rating",names.arg = MovieDF$title)
movie <- MovieDF[1:25]
movie <- MovieDF[1:25]
barplot(movie$imdb_rating.col="red",ylab="rating",xlab = "movies",
ylim = c(0,10),main = "IMDB rating",names.arg = movie$title)
barplot(movie$imdb_rating,col="red",ylab="rating",xlab = "movies",
ylim = c(0,10),main = "IMDB rating",names.arg = movie$title)
barplot(movie$imdb_rating,col="red",ylab="rating",xlab = "movies",ylim = c(0,10),main = "IMDB rating",names.arg = movie$title)
movie <- MovieDF[1:25]
barplot(movie$imdb_rating,col="red",ylab="rating",xlab = "movies",ylim = c(0,10),main = "IMDB rating",names.arg = movie$title)
barplot(movie$imdb_rating,
col="red",
ylab="rating",
xlab = "movies",
ylim = c(0,10),
main = "IMDB rating",
names.arg = movie$title,
las=2)
movie <- MovieDF[1:25]
barplot(movie$imdb_rating,
col="red",
ylab="rating",
xlab = "movies",
ylim = c(0,10),
main = "IMDB rating",
names.arg = movie$title,
las=2)
movie <- MovieDF[1:25,]
barplot(movie$imdb_rating,
col="red",
ylab="rating",
xlab = "movies",
ylim = c(0,10),
main = "IMDB rating",
names.arg = movie$title,
las=2)
pie(genertable, main="Pie chart of genre",border = "red",col=c("green","red","yellow","blue","cyan","orange","black"))
# scatter plot ####
plot(x=MovieDF$imdb_rating,
y=MovieDF$audience_score,
main="Rating Vs AU_Score",
xlim=c(0,10),
ylim=c(0,100),
col="red")
cor(MovieDF$imdb_rating,MovieDF$audience_score)
source("~/Desktop/r-tutorial/R_first_Project/assignnment1.r")
source("~/Desktop/r-tutorial/R_first_Project/assignnment1.r")
vNameofstudent <- c("Vansh Raj","Swati","Pulkit","Subhajit")
vSemester <- c(1,2,3,4)
vNumberofsubject <- c(10,15,10,10)
vpassed <- c(01,12,08,09)
vfail <- c(09,03,02,01)
df4 <-  as.data.frame(cbind(vNameofstudent,vSemester,vNumberofsubject,vpassed,vfail))
df4
library(readxl)
df <- read_excel("data/StateData.xlsx")
View(df)
subDF <- subset(df, governor == "Republican",select=c("state_code","State","governor"))
View(subDF)
subDF1 <- subset(df,governor == "Republican" & openness > 40 & instagram > 0.40 & facebook >0.40,select=c("state_code","State","openness","instagram","facebook","governor"))
View(subDF1)
nrow(subDF1)
nrow(df)
subDF2 <- subset(df,instagram > facebook, select = c("state_code","State"))
View(subDF2)
vNameofstudent <- c("Vansh Raj","Swati","Pulkit","Subhajit")
vSemester <- c(1,2,3,4)
vpassed <- c(01,12,08,09)
vfail <- c(09,03,02,01)
df4 <-  as.data.frame(cbind(vNameofstudent,vSemester,vNumberofsubject,vpassed,vfail))
df4
unlink("assignnment1_cache", recursive = TRUE)
x<-seq(0,2,0.1)
y<-sin(x)
x<-seq(0,2,0.1)
y<-sin(x)
plot(x,y,type = 'o')
plot(x,y,type = 'b')
plot(x,y,type = 'l')
plot(x,y,type = 'p')
x<-seq(1,20,1)
y<-3*x
Data<-data.frame(x,y)
ggplot(data = Data,aes(x=Data$x)) + geom_point()
Sys.time()
o2 <- c("a","b","c","d")
View(o2)
